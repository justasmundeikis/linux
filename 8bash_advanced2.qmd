---
title: "BASH advanced 2"
execute:
  daemon: false
  enabled: false
format:
  html:
    code-copy: true
    eval: false
    echo: true
---


### whoami

Komanda `whoami` parodo dabartinio vartotojo (**user**) vardą, su kuriuo esate prisijungę prie sistemos. Tai paprastas ir naudingas būdas patikrinti, kokį vartotojo prisijungimą naudojate, ypač kai dirbate su keliais vartotojais toje pačioje sistemoje.

```BASH
whoami
```

Šiuo atveju, vartotojo vardas yra `main-user`

![](img/shell/whoami.png)

### $PATH

!Atsargiai ši tema kiek sudėtingesnė, bet ją pravartu žinoti.

Kaip Shell žino, kokią programą startuoti, kai pvz tu įrašai `ls`? Juk negali Shell eiti epr visus tavo failus ir ieškoti, ar yra tokia programa `ls`? Tai užtruktų labai ilgai ir būtų neefektyvu. Tavo Bash programa yra išsaugojusi visų direktorijų sąrašą, kurias ji tikrina.


```BASH
main-user@linux-mint:~$ $PATH
bash: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin: No such file or directory
```
Ką visa tai reiškia? Kai vartotojas įrašo komanda `ls` Bah pirma tikrina `/usr/local/sbin/` jeigu ten neranda, eina į sekandią direktoriją `/usr/local/bin` ir t.t. Jeigu visame sąraše šios programos nebūtų, įrašius `ls` nieko neįvyktų, o terminale išvystum pranešimą, su siūlymų galbūt šią programą instaliuoti (jeigu `apt` programa apie šią komandą kažką žino).

su komanda `which` galime pamayti, o tai kur būtent `ls` randasi

```BASH
main-user@linux-mint:~$ which ls
/usr/bin/ls
```

Taigi įrašius `ls` bash keliavo

* /usr/local/sbin <- nerado `ls`
* /usr/local/bin <- nerado `ls`
* /usr/sbin <- nerado `ls`
* /usr/bin <- čia rado `ls`

Retais atvejais, tau gali reikėti pridėti direktorijas prie $PATH, bet labai tikėtina, jog tik pradedant naudotis Linux CLI, tau to dar nereikės. Tačiau jeigu kada prireiks, tu žinosi, apie ką čia kalbama.

### which

Komanda `which` naudojama norint sužinoti, kurioje vietoje (**path**) yra esanti tam tikra vykdomoji programa. Ji parodo visą vykdomojo failo kelią, nurodydama, kurioje direktorijoje sistema pirmiausiai ieškos šios programos pagal PATH aplinkos kintamąjį.

Kartu ši komanda naudojama norint sužinoti, ar norima komanda yra įdiegta.

parodo kurioje vietoje yra `ls` programa
```BASH
which ls
```

Taip pat galima pamatyti, ar pvz `neovim` programa yra instaliuota

```BASH
which neovim
```

Kadangi Terminal negrąžino jokio kelio (path), tai pasako, jog šios programos nėra.

![](img/shell/which.png)


## locate

## whereis

## path


## man

## --help

## tldr

`man` puslapiai yra begalo išsamūs, tačiau jie ir ganėtinai ilgi. `<command> --help` arba `<command> -h` kartais būna gani trumpi ir aiškūs pagalbos puslpiai, tačiau jeigu komanda turi daug nustatymų ir argumentų, net `--help` puslapiai gali būti perdaug sudėtingi, ypač pačioje pradžioje naudojantis Linux.

Instaliuok programa `yt-dlp`  ir paleisk jos `--help` puslapį. Gana ilgas tiesa?

Kita programa, kuri stengiasi padėti CLI naudotojams, yra `tldr` (akronimias reiškiantis "too long;didn't read it" = santrauka)

instaliuok programa `tldr` ir paleisk ją su argumentu `yt-dlp`

```BASH
tldr yt-dlp
```

Ši programa pateikia dažniausius komandos naudjimo scenarijus ir labai trumpą paaiškinimą apie komandą. Tad tai dar vienas instrumentas tavo arsenale, primiršus prismint kaip veikia komanda, ką ji daro ir kokie nustatymai ir argumentai yra galimi.
5. Pabandyk `tldr tldr`