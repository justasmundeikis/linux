---
title: "BASH Sistemos Valdymas"
execute:
  daemon: false
  enabled: false
format:
  html:
    code-copy: true
    eval: false
    echo: true
---

Žinoma, čia yra peržiūrėtas ir perrašytas poskyris, skirtas besimokančiam Linux vartotojui, pateikiant jį iš mokytojo perspektyvos:

## Aplinkos Kintamieji ir Jų Valdymas

Sveiki atvykę į Linux aplinkos kintamųjų pasaulį! Šiame skyriuje išmoksime, kaip aplinkos kintamieji padeda programoms ir procesams bendrauti Linux sistemoje. Suprasdami, kaip veikia kintamieji, galėsite efektyviau valdyti savo darbo aplinką, pritaikydami įvairias konfigūracijas ir automatizuodami užduotis. Tai yra būtini įgūdžiai tiek programuotojams, tiek sistemų administratoriams.

### Kas yra aplinkos kintamieji?

Aplinkos kintamieji yra pavadintos reikšmės, saugomos operacinėje sistemoje. Jie naudojami perduoti informaciją tarp skirtingų procesų. Kai kuriais atvejais jie nurodo, kaip programos turėtų veikti. Pavyzdžiui:

- `PATH`: nurodo katalogus, kuriuose shell ieško vykdomųjų failų.
- `HOME`: dabartinio vartotojo namų katalogas.
- `USER`: prisijungusio vartotojo vardas.

### Kintamųjų kūrimas ir valdymas

#### Sukurti lokalų kintamąjį

Galite sukurti kintamąjį, kuris galioja tik dabartinėje shell sesijoje. Tai puikus būdas pernešti reikšmes nesukuriant ilgalaikių pakeitimų:

```bash
MY_VAR="Hello, world!"
```

#### `export`: aplinkos kintamojo sukūrimas

Norėdami, kad kintamasis būtų prieinamas visiems vaikiniams procesams, naudokite `export`. Tai leidžia perduoti reikšmes programoms, kurios vykdomos iš esamos sesijos:

```bash
export MY_VAR="Hello, world!"
```

### Naudojimas programose

Naudojant aplinkos kintamuosius, jų reikšmes galima lengvai pasiekti ir naudoti programose ar skriptuose:

```bash
echo $MY_VAR
```

### Peržiūrėti esamus kintamuosius

#### `env`: visų kintamųjų peržiūra

Komanda `env` leidžia peržiūrėti visus esamus aplinkos kintamuosius arba laikinai paleisti programą su tam tikrais kintamaisiais, suteikiant jums lankstumo ir kontrolės:

```bash
env
env MY_VAR="Temporary value" python my_script.py
```

#### `printenv`: specifinių kintamųjų rodymas

`printenv` komanda leidžia pamatyti specifinius kintamuosius. Tai naudinga, kai reikia greitai tikrinti, ar kintamieji nustatyti tinkamai:

```bash
printenv PATH
```

### Kintamųjų pašalinimas

#### `unset`: kintamojo pašalinimas

Jei kintamasis nebereikalingas, galite jį pašalinti naudodami `unset`, taip išvalydami aplinką nuo nereikalingų reikšmių:

```bash
unset MY_VAR
```

### Praktiniai naudojimo scenarijai

- **Aplinka ir konfigūracija**: Aplinkos kintamieji leidžia nustatyti, kaip turėtų veikti jūsų programos - nuo sistemos kelio iki duomenų bazių prisijungimų.
- **Skriptai ir automatizavimas**: Kintamieji leidžia skriptams tapti lankstesniais ir pritaikomais, perduodant reikšmes tarp jų dalių.
- **Problemos sprendimas**: Naudodami `env` ir `printenv`, galite greitai rasti klaidų priežastis ir sužinoti, kokios reikšmės yra nustatytos.




Žinoma, pateikiu peržiūrėtą ir reikšmingai papildytą poskyrį apie disko tvarkymą ir optimizavimą, pritaikytą besimokančiam Linux vartotojui, su pavyzdžiais ir skirtingais flagais.

## Disko Tvarkymas ir Optimizavimas

Sveiki atvykę į skyriaus apie disko tvarkymą ir optimizavimą Linux sistemoje! Šiame poskyryje išmoksite, kaip naudoti įvairius įrankius, padedančius analizuoti ir optimizuoti disko vietos naudojimą. Disko vietos valdymas yra gyvybiškai svarbus, kad resursai būtų efektyviai naudojami ir sisteminė veikla nebūtų trikdoma dėl vietos trūkumo. Šios komandos dažnai naudojamos, kai reikia atlaisvinti vietą diske arba analizuoti, kurie katalogai užima daugiausia vietos.

### `df`
Komanda `df` (disk free) leidžia peržiūrėti informaciją apie disko vietą visose prijungtose failų sistemose. Ji parodo, kiek vietos užimta, kiek laisvos vietos dar liko, ir kur yra prijungiamos direktorijos.

- **Naudojimas**:
  ```bash
  df -h
  ```
  - **-h**: Parodo dydžius žmogui suprantamais vienetais (pvz., GB, MB), kas padeda geriau suprasti disko vietos naudojimą.

- **Išvesties pavyzdys**:
  ```
  Filesystem      Size  Used Avail Use% Mounted on
  /dev/sda1        50G   20G   30G  40% /
  /dev/sdb1       100G   80G   20G  80% /data
  ```

- **Papildomi Flagai**:
  - **-T**: Rodo failų sistemos tipą (pvz., ext4, xfs).
  - **-i**: Išveda informaciją apie inode, naudojama kai failų sistema susiduria su inodų stygiumi.

### `du`
Komanda `du` (disk usage) padeda įvertinti, kiek vietos užima konkrečios direktorijos ir jų failai. Ji naudinga norint susekti, kurie failai ar katalogai naudoja daugiausia vietos.

- **Naudojimas**:
  ```bash
  du -sh *
  ```
  - **-s**: Išveda tik apibendrintą bendrą katalogo dydį.
  - **-h**: Parodo dydžius žmogui suprantamais vienetais.

- **Išvesties pavyzdys**:
  ```
  2.1G    Movies
  1.4G    Music
  500M    Documents
  ```

- **Papildomi Flagai**:
  - **--max-depth=N**: Rodo dydžius tik iki nurodyto katalogų gylio. Pvz., `du --max-depth=1 /home/user` parodys tik pirmo lygio katalogus.
  - **-c**: Prideda bendrą dydžių suvestinę, naudinga norint pamatyti viso katalogo dydį.

### `ncdu`
`ncdu` (NCurses Disk Usage) yra interaktyvus disko vietos analizatorius, leidžiantis lengvai naršyti ir įvertinti, kurios direktorijos ar failai užima daugiausiai vietos. Tai puikus įrankis, norint vizualiai pamatyti ir valdyti disko naudojimą.

- **Naudojimas**:
  ```bash
  ncdu /home/user
  ```
  Leidžia naršyti po katalogus interaktyvioje aplinkoje, kur galite matyti kiekvieno katalogo dydį ir lengvai naviguoti, kad rastumėte daugiausia vietos užimančius failus.

- **Papildomi Patarimai**:
  - **d**: Ištrinti pasirinktą failą ar katalogą (būkite atsargūs!).
  - **q**: Išeiti iš `ncdu`.

### Papildomos Naudojimo Scenarijai

- **Sistemos Priežiūra**: Naudodamiesi `df`, galite greitai patikrinti, kiek vietos liko kiekviename diske, ir numatyti, kada reikės atlaisvinti vietos.
- **Didelių Failų Identifikavimas**: Naudodami `du` kartu su `sort -h`, galite surūšiuoti katalogus ir failus pagal dydį, lengviau identifikuodami, kurie failai reikalauja dėmesio.
- **Vizualinis Analizavimas**: `ncdu` suteikia vizualų būdą naršyti po disko struktūrą ir iš karto pamatyti, kurie katalogai yra per dideli, o tai leidžia imtis veiksmų efektyviau.

Naudodami šiuos įrankius, galėsite lengviau valdyti disko vietą ir užtikrinti, kad jūsų sistema veiktų sklandžiai ir efektyviai. Eksperimentuokite su šiomis komandomis, kad išmoktumėte optimizuoti disko naudojimą pagal savo poreikius!






Žinoma, peržiūrėkime ir perrašykime visą poskyrį apie vartotojų ir grupių administravimą, įtraukiant papildomas komandas ir praktinius patarimus, kad besimokantis Linux vartotojas galėtų visapusiškai suprasti šią svarbią temą.

## Vartotojų ir Grupių Administravimas

Vartotojų ir grupių administravimas yra esminė Linux sistemos dalis, leidžianti valdyti prieigą prie sistemos resursų bei užtikrinti saugumą. Ši tema apima komandų rinkinį, skirtą kurti, modifikuoti ir valdyti vartotojus bei grupes. Tai leidžia administratoriui užtikrinti, kad tinkami vartotojai turėtų reikiamas teises ir prieigą prie sistemos resursų. Šios komandos dažnai naudojamos diegiant naujas sistemas, konfigūruojant vartotojo aplinkas ar atliekant saugumo auditą.

### `adduser`

Komanda `adduser` naudojama kurti naują vartotoją sistemoje. Ji automatiškai sukuria vartotojo namų katalogą ir leidžia nustatyti pradinius vartotojo parametrus, pvz., slaptažodį.

**Pavyzdys**:
```bash
sudo adduser jonas
```
Tai sukurs naują vartotoją „jonas“ su namų katalogu `/home/jonas`.

### `usermod`

`usermod` leidžia modifikuoti esamų vartotojų paskyras. Naudojama priskirti vartotojui naujas grupes, keisti jo slaptažodį ar atnaujinti vartotojo duomenis, tokius kaip namų katalogas ar login vardas.

**Papildomi Flagai**:
- **`-aG`**: Prideda vartotoją prie nurodytos grupės.
  ```bash
  sudo usermod -aG sudo jonas
  ```
- **`-d`**: Keičia vartotojo namų katalogą.
  ```bash
  sudo usermod -d /home/newjonas jonas
  ```

### `passwd`

Komanda `passwd` naudojama vartotojo slaptažodžio keitimui, užtikrinant saugią prieigą prie paskyros.

**Pavyzdys**:
```bash
sudo passwd jonas
```
Tai leis jums pakeisti „jonas“ paskyros slaptažodį.

### `userdel`

`userdel` leidžia pašalinti vartotoją iš sistemos. Tai gali būti būtina, kai reikia panaikinti pasenusias paskyras.

**Pavyzdys**:
```bash
sudo userdel jonas
```
- **`-r`**: Pašalina vartotoją ir jo namų katalogą.
  ```bash
  sudo userdel -r jonas
  ```

### `groupadd`

`groupadd` komanda leidžia kurti naujas grupes, kad vartotojai galėtų būti grupuojami pagal jų roles ar teises.

**Pavyzdys**:
```bash
sudo groupadd developers
```
Sukuria naują grupę „developers“.

### `groupdel`

`groupdel` leidžia pašalinti grupę iš sistemos, kai jos nebereikia.

**Pavyzdys**:
```bash
sudo groupdel developers
```

### `chown`

Komanda `chown` skirta keisti failo ar katalogo savininką, užtikrinant tinkamą prieigą.

**Pavyzdys**:
```bash
sudo chown jonas:developers /home/jonas/file.txt
```

### `chmod`

`chmod` naudojama keisti failo ar katalogo teises, leidžiančias tiksliai kontroliuoti prieigą.

**Papildomi Flagai**:
- **Simbolinis rėžimas**:
  ```bash
  chmod u+rwx,go-rwx file.txt
  ```
- **Skaitmeninis rėžimas**:
  ```bash
  chmod 755 file.txt
  ```

### Papildomos Komandos

- **`id`**: Parodo vartotojo ID, grupės ID ir papildomas grupes.
  ```bash
  id jonas
  ```
- **`groups`**: Parodo grupių sąrašą, kurioms vartotojas priklauso.
  ```bash
  groups jonas
  ```

### Praktiniai Pavyzdžiai ir Saugumo Praktikos

- **Vartotojų Auditas**: Naudodami `id` ir `groups`, galite patikrinti, kam priklauso tam tikri vartotojai, kad užtikrintumėte tinkamą prieigą ir teises.
- **Sistemos Saugumas**: Reguliariai peržiūrėkite vartotojų ir grupių sąrašus, kad išvengtumėte pasenusių paskyrų.
- **Administracinės Prieigos Valdymas**: Naudokite `adduser` ir `passwd`, kad kasdien atnaujintumėte paskyras ir slaptažodžius.

Naudodami šias komandas, galėsite veiksmingai administruoti vartotojus ir grupes, užtikrindami, kad jūsų Linux sistema būtų saugi ir efektyviai valdoma. Eksperimentuokite su šiomis komandomis, kad įgytumėte dar daugiau praktinės patirties!




Puiku! Štai atnaujintas poskyris apie ugniasienės ir tinklo saugumo valdymą, įtraukiant papildomus paaiškinimus, pavyzdžius ir geriausias praktikas, pritaikytas besimokančiam Linux vartotojui.

## Ugniasienės ir Tinklo Saugumo Valdymas

Ugniasienė ir tinklo saugumo valdymas yra esminiai komponentai siekiant užtikrinti, kad jūsų Linux sistema būtų apsaugota nuo neteisėtos prieigos ir kenkėjiškų atakų. Ugniasienė veikia kaip filtras, kuris kontroliuoja srautą, leidžiamą į jūsų sistemą ir iš jos, blokuodamas nepageidaujamus ryšius. Šiame skyriuje išmoksime, kaip naudoti įvairius įrankius tinklo saugumui užtikrinti.

### Kas yra Ugniasienė?

Ugniasienė yra saugumo sistema, stebinti ir kontroliuojanti atvykstančius ir išvykstančius tinklo srautus pagal iš anksto nustatytas saugumo taisykles. Linux sistemoje dažniausiai naudojama programinė ugniasienė, tokia kaip `ufw` (Uncomplicated Firewall), kuri palengvina taisyklių konfigūravimą.

### `ufw` (Uncomplicated Firewall)

`ufw` yra paprastas įrankis, skirtas ugniasienės taisyklėms kurti ir valdyti. Jis leidžia lengvai leisti arba drausti srautą tam tikrais prievadais arba IP adresais.

- **Pagrindinės Komandos**:
  - **Įjungti ugniasienę**:
    ```bash
    sudo ufw enable
    ```
  - **Išjungti ugniasienę**:
    ```bash
    sudo ufw disable
    ```
  - **Leisti srautą per konkretų prievadą** (pvz., SSH prievadas 22):
    ```bash
    sudo ufw allow 22
    ```
  - **Drausti srautą per konkretų prievadą**:
    ```bash
    sudo ufw deny 80
    ```
  - **Peržiūrėti visas ugniasienės taisykles**:
    ```bash
    sudo ufw status
    ```
  - **Pašalinti taisyklę pagal numerį**:
    ```bash
    sudo ufw status numbered
    sudo ufw delete <rule_number>
    ```

- **Svarbios Sąvokos**:
  - **Prievadas (Port)**: Tai yra virtualus taškas, kuris leidžia skirtingoms aplikacijoms bendrauti per tinklą.
  - **Taisyklės Vykdymo Tvarka**: `ufw` tvarko taisykles seka, leidžiančią arba blokuojančią srautą pagal pirmą atitiktį.

- **Praktiniai Pavyzdžiai**:
  - Leisti tik vietiniam tinklui prisijungti prie serverio:
    ```bash
    sudo ufw allow from 192.168.1.0/24
    ```
  - Riboti SSH ryšius, siekiant apsaugoti nuo „brute-force“ atakų:
    ```bash
    sudo ufw limit ssh
    ```

### `netstat`

`netstat` yra įrankis, naudojamas tinklo statistikos peržiūrai. Jis teikia informaciją apie tinklo ryšius, maršrutizavimo lenteles ir tinklo sąsajų būklę.

- **Naudojimas**:
  - **Rodyti visas tinklo jungtis**:
    ```bash
    netstat -a
    ```
  - **Rodyti tik veikiančias TCP jungtis**:
    ```bash
    netstat -at
    ```
  - **Rodyti tinklo sąsajos statistiką**:
    ```bash
    netstat -i
    ```

### `ss`

`ss` yra modernus įrankis tinklo ryšių stebėsenai, pateikiantis detalesnę informaciją nei `netstat`.

- **Naudojimas**:
  - **Rodyti visas TCP jungtis**:
    ```bash
    ss -t
    ```
  - **Rodyti visas klausymosi (listening) jungtis**:
    ```bash
    ss -l
    ```
  - **Rodyti visas UDP jungtis**:
    ```bash
    ss -u
    ```

- **Privalumai**: `ss` gali būti greitesnis ir teikti išsamesnę informaciją apie tinklo ryšius.

### Tinklo Saugumo Geriausios Praktikos

- **Reguliarus Taisyklių Peržiūrėjimas**: Nuolat peržiūrėkite ir atnaujinkite ugniasienės taisykles, kad išvengtumėte nesaugios prieigos.
- **Nuolatinis Tinklo Ryšių Stebėjimas**: Naudokite `netstat` ir `ss` tinklo ryšių būklės stebėjimui ir diagnostikai, greitai aptikdami neįprastą veiklą.
- **Saugumo Patikros**: Pasirūpinkite, kad tik būtini prievadai būtų atidaryti ir prieinami iš išorės.

Šios komandos ir praktikos suteiks jums reikiamus įrankius tinklo saugumui administruoti, leidžiančius efektyviai valdyti ir stebėti tinklo srautus bei apsaugoti savo Linux sistemą. Eksperimentuokite su šiomis komandomis ir pritaikykite geriausias praktikas, kad užtikrintumėte savo tinklo saugumą!


Žinoma, išplėsiu poskyrį apie sistemines paslaugas ir automatizavimą, kad jis būtų išsamesnis ir labiau pritaikytas naujokams, naudodamas `apache` kaip pavyzdį.

## Sisteminės Paslaugos ir Automatizavimas

Linux sistemų administravimas reikalauja efektyvaus paslaugų valdymo ir užduočių automatizavimo. Šios dvi sritys yra esminės, siekiant užtikrinti, kad sistemos veiktų patikimai ir efektyviai. Paslaugų valdymas leidžia užtikrinti, kad serveriai ir programos veiktų taip, kaip numatyta, o automatizavimas leidžia sutaupyti laiko pasikartojančioms užduotims atlikti. 

### `systemd` ir `systemctl`

`systemd` yra naujausias ir plačiai naudojamas init sistema Linux sistemoje, kuri valdo paslaugų paleidimą, sustabdymą ir būklės tikrinimą. Ši sistema pakeitė senesnes init sistemas daugelyje šiuolaikinių distribucijų dėl savo lankstumo ir funkcionalumo.

`systemctl` yra pagrindinė komanda, naudojama sąveikai su `systemd`. Ji suteikia galimybę valdyti paslaugas, stebėti jų būklę ir konfigūruoti, kada ir kaip jos turėtų būti vykdomos.

#### Pagrindinės `systemctl` Komandos

- **Paleisti paslaugą**: Naudojama paleisti nurodytą paslaugą. Tai dažnai daroma po paslaugos konfigūracijos pakeitimų.

  ```bash
  sudo systemctl start apache2
  ```

- **Sustabdyti paslaugą**: Sustabdo veikiančią paslaugą. Tai naudinga, kai paslauga turi būti laikinai išjungta dėl priežiūros ar kitos priežasties.

  ```bash
  sudo systemctl stop apache2
  ```

- **Perkrauti paslaugą**: Atlieka paslaugos perkrovimą, kas gali būti būtina po konfigūracijos pakeitimų, kai paslauga turi atsinaujinti su naujais nustatymais.

  ```bash
  sudo systemctl restart apache2
  ```

- **Patikrinti paslaugos būseną**: Rodo dabartinę paslaugos būseną, įskaitant, ar ji veikia, ar yra sustabdyta, ir ar yra kokių nors klaidų ar įspėjimų.

  ```bash
  sudo systemctl status apache2
  ```

- **Įjungti paslaugą automatiškai paleidžiant sistemą**: Leidžia paslaugai automatiškai paleisti, kai sistema įjungta. Tai naudinga serveriams, kurie turi būti prieinami visada.

  ```bash
  sudo systemctl enable apache2
  ```

- **Išjungti automatinį paslaugos paleidimą**: Išjungia automatinį paslaugos paleidimą, pvz., jei paslauga nebereikalinga.

  ```bash
  sudo systemctl disable apache2
  ```

#### Praktinis Pavyzdys

Kai sukonfigūruosite `apache2` ir paleisite jį kaip paslaugą, galite pasiekti savo vietinį web serverį naršyklėje, įvedę `http://localhost`. Tai leis jums patikrinti, kaip veikia jūsų web serveris ir ar teisingai sukonfigūravote viską.

### Automatizavimas su `cron` ir `at`

Automatizavimas yra svarbus aspektas efektyviam Linux administravimui, nes jis leidžia automatizuoti kasdienes užduotis, užtikrinant, kad jos būtų atliktos laiku ir tiksliai.

#### `cron`

`cron` - tai paslauga, leidžianti planuoti reguliarias užduotis. Ji veikia kaip laikrodis, kuris laukia nustatyto laiko ir tada vykdo užduotį.

- **Crontab Įrašų Redagavimas**: Naudodami `crontab` redaguokite savo užduotis:

  ```bash
  crontab -e
  ```

- **Crontab Sintaksė**: Sintaksė susideda iš penkių laukų, žyminčių laiką, ir užduoties, kurią reikia atlikti.

  ```
  * * * * * /komanda/kelias
  ```

  Kur „*“ reiškia minutės, valandos, dienos, mėnesiai ir savaitės dienos. Tai leidžia atlikti užduotis konkrečiu metu.

- **Pavyzdys**:
  - Kasdien 3:00 val. ryte vykdyti atsarginės kopijos skriptą:

    ```bash
    0 3 * * * /usr/local/bin/backup.sh
    ```

#### `at`

`at` leidžia planuoti vienkartines užduotis, kurios turi būti įvykdytos tam tikru laiku ateityje. Tai patogu, kai reikia atlikti vienkartinį veiksmą.

- **Pavyzdys**:

  ```bash
  echo "/kelias/į/skriptą" | at 14:00
  ```

- **Peržiūrėti suplanuotas užduotis**:
  
  ```bash
  atq
  ```

### Logų ir Klaidos Tvarkymas

- **Paslaugų Logų Stebėjimas**: Naudokite `journalctl`, kad galėtumėte stebėti ir tikrinti paslaugų veikimą bei diagnozuoti problemas.

  ```bash
  sudo journalctl -u apache2
  ```

### Papildomi Įrankiai ir Geriausios Praktikos

- **Ansible ir Kiti Įrankiai**: Norint didesnio masto automatizacijos, galima naudotis įrankiais kaip `Ansible`, kurie padeda konfigūruoti ir valdyti daugybę sistemų vienu metu.

- **Saugumo Praktikos**: Užtikrinkite, kad prieiga prie `crontab` ir `at` būtų apribota, naudojant `/etc/cron.allow` ir `/etc/cron.deny`.

- **Reguliarus Planavimas ir Auditavimas**: Nuolat peržiūrėkite ir optimizuokite savo automatizavimo užduotis ir paslaugų konfigūraciją, užtikrindami, kad jos būtų veiksmingos ir saugios.

Šis skyrius padės jums valdyti sistemines paslaugas ir automatizuoti užduotis, suteikdamas reikiamus įrankius, kad jūsų Linux sistema veiktų sklandžiai ir efektyviai. Praktikuokite naudoti šias komandas ir geriausias praktikas, kad taptumėte tikru sistemų automatikos meistru!